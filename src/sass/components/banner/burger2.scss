@mixin transition {
  @for $i from 1 through 50 {
    &:nth-child(#{$i}) {
      transition: transform
        1s
        #{$i *
        0.08}s
        cubic-bezier(0.29, 1.4, 0.44, 0.96);
    }
  }
}

@mixin alpha-attribute($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

// $main: #1184f0;
// $main: #1ab798;
$main: #1ab798;
$text: #fefefe;
// $text: color(primary-text);
$contrast: darken($main, 10%);
// $contrast: #1ab798;

$burgerlink: color(primary-text);
$burgerlinkhover: $text;
$burger-height: 20px;
$burger-width: 30px;
$thickness: 3px;
$burger-font-family: $primary-font-stack;
$burger-font-weight: $bold-font-size;

.burger-menu {
  @media (min-width: 768px) {
    display: none;
  }
}

.drawer-list {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  transform: translate(100vw, 0);

  /* ie workaround */
  -ms-transform: translatex(-100vw);
  box-sizing: border-box;
  // pointer-events: none;
  padding-top: 125px;
  transition: width 475ms ease-out, transform 450ms ease,
    border-radius 0.8s 0.1s ease;
  border-bottom-left-radius: 100vw;
  @include alpha-attribute('background-color', rgba($contrast, 0.8), white);
  @media (min-width: 768px) {
    width: 40vw;
  }

  ul {
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: auto;
    overflow-x: hidden;
    // pointer-events: auto;
  }

  li {
    list-style: none;
    text-transform: uppercase;
    // pointer-events: auto;
    white-space: nowrap;
    box-sizing: border-box;
    transform: translatex(100vw);

    /* ie workaround */
    -ms-transform: translatex(-100vw);

    &:last-child {
      margin-bottom: 2em;
    }

    a {
      font-family: $primary-font-stack;
      font-weight: $bold-font-size;
      text-decoration: none;
      color: $text;

      text-align: center;
      display: block;
      padding: 1rem;
      font-size: calc(24px - 0.5vw);
      @media (min-width: 768px) {
        text-align: right;
        padding: 0.5rem;
      }

      &:hover {
        cursor: pointer;
        @include alpha-attribute('background-color', rgba($main, 0.5), white);
      }
    }
  }
}

input.hamburger {
  display: none;

  &:checked {
    & ~ .drawer-list {
      transform: translatex(0);
      border-bottom-left-radius: 0;

      li {
        transform: translatex(0);
        @include transition;

        a {
          padding-right: 15px;
        }
      }
    }

    & ~ label {
      > i {
        background-color: transparent;
        transform: rotate(90deg);

        &:before {
          transform: translate(-50%, -50%) rotate(315deg);
          background-color: $burgerlinkhover;
        }

        &:after {
          transform: translate(-50%, -50%) rotate(-315deg);
          background-color: $burgerlinkhover;
        }
      }

      close {
        color: $text;
        width: 100%;
      }

      open {
        color: rgba(0, 0, 0, 0);
        width: 0;
      }
    }
  }
}

label.hamburger {
  z-index: 9999;
  position: relative;
  display: block;
  //   height: 50px;
  //   width: 50px;
  height: $burger-height;
  width: $burger-width;

  &:hover {
    cursor: pointer;
  }

  span {
    close,
    open {
      text-transform: uppercase;
      font-size: 0.8em;
      // align-text: center;
      position: absolute;
      transform: translateY($burger-height + 10);
      text-align: center;
      overflow: hidden;
      transition: width 0.25s 0.35s, color 0.45s 0.35s;
    }

    close {
      color: rgba(0, 0, 0, 0);
      right: 0;
      width: 0;
    }

    open {
      color: $burgerlink;
      width: 100%;
    }
  }

  > i {
    position: absolute;
    width: 100%;
    height: $thickness;
    top: 50%;
    // background-color: $text;
    background-color: $burgerlink;
    // pointer-events: auto;
    // transition-duration: 0.35s;
    // transition-delay: 0.35s;

    &:before,
    &:after {
      position: absolute;
      display: block;
      width: 100%;
      height: $thickness;
      left: 50%;
      //   background-color: $text;
      background-color: $burgerlink;
      content: '';
      transition: transform 0.35s;
      transform-origin: 50% 50%;
    }

    &:before {
      transform: translate(-50%, -14px);
    }

    &:after {
      transform: translate(-50%, 14px);
    }
  }
}

label.hamburger {
  position: fixed;
  top: 60px;
  right: 15px;
  transform: translate(0, -50%);
}
